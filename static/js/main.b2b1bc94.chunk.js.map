{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","query","setQuery","loading","setLoading","setMovie","isMovieExist","setIsMovieExist","handleSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","foundMovie","Title","imdbID","Plot","Poster","newMovie","finally","htmlFor","type","id","placeholder","classnames","value","onChange","target","disabled","onClick","App","setMovies","some","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2b1bc94.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport classnames from 'classnames';\n\nimport './FindMovie.scss';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieData } from '../../types/MovieData';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\nconst DEFAULT_IMG_URL\n  = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\ntype Props = {\n  onAddMovie: (value: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isMovieExist, setIsMovieExist] = useState(false);\n\n  const checkIfMovieExist = (response: ResponseError | MovieData):\n  response is MovieData => !('Error' in response);\n\n  const handleSubmit = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    event.preventDefault();\n    setLoading(true);\n\n    getMovie(query)\n      .then((foundMovie) => {\n        if (checkIfMovieExist(foundMovie)) {\n          const {\n            Title, imdbID, Plot, Poster,\n          } = foundMovie;\n\n          const newMovie: Movie = {\n            title: Title,\n            description: Plot,\n            imgUrl: Poster === 'N/A'\n              ? DEFAULT_IMG_URL\n              : Poster,\n            imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n            imdbId: imdbID,\n          };\n\n          setMovie(newMovie);\n        } else {\n          setIsMovieExist(true);\n        }\n      }).finally(() => setLoading(false));\n  };\n\n  const reset = () => {\n    setQuery('');\n    setMovie(null);\n    setIsMovieExist(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classnames(\n                'input',\n                {\n                  'is-danger': isMovieExist,\n                },\n              )}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsMovieExist(false);\n              }}\n            />\n          </div>\n\n          {isMovieExist && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              disabled={!query}\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classnames(\n                'button',\n                'is-light',\n                {\n                  'is-loading': loading,\n                },\n              )}\n              onClick={(event) => {\n                handleSubmit(event);\n              }}\n            >\n              {movie\n                ? ('Search again')\n                : ('Find a movie')}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  if (movie) {\n                    onAddMovie(movie);\n                    reset();\n                  }\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ed5491f3';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (!movies.some(({ imdbId }) => imdbId === newMovie.imdbId)) {\n      setMovies(prev => [...prev, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}